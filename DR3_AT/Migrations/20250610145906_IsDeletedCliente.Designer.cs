// <auto-generated />
using System;
using DR3_AT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DR3_AT.Migrations
{
    [DbContext(typeof(AgenciaTurismoContext))]
    [Migration("20250610145906_IsDeletedCliente")]
    partial class IsDeletedCliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("DR3_AT.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "sena@mail.com",
                            IsDeleted = false,
                            Nome = "Gustavo Sena"
                        },
                        new
                        {
                            Id = 2,
                            Email = "rinaldo@mail.com",
                            IsDeleted = false,
                            Nome = "Rinaldo Ferreira"
                        });
                });

            modelBuilder.Entity("DR3_AT.Models.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Nome");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Destinos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Rio de Janeiro",
                            Pais = "Brasil"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Angra dos Reis",
                            Pais = "Brasil"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Cabo Frio",
                            Pais = "Brasil"
                        });
                });

            modelBuilder.Entity("DR3_AT.Models.DestinoPacote", b =>
                {
                    b.Property<int>("DestinoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PacoteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DestinoId", "PacoteId");

                    b.HasIndex("PacoteId");

                    b.ToTable("DestinoPacote");

                    b.HasData(
                        new
                        {
                            DestinoId = 3,
                            PacoteId = 1
                        },
                        new
                        {
                            DestinoId = 2,
                            PacoteId = 2
                        },
                        new
                        {
                            DestinoId = 1,
                            PacoteId = 2
                        });
                });

            modelBuilder.Entity("DR3_AT.Models.PacoteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.ToTable("Pacotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacidadeMaxima = 20,
                            DataFinal = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 150.0m,
                            Titulo = "Férias em Cabo Frio"
                        },
                        new
                        {
                            Id = 2,
                            CapacidadeMaxima = 10,
                            DataFinal = new DateTime(2025, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 350.0m,
                            Titulo = "Passeio em Angra dos Reis"
                        });
                });

            modelBuilder.Entity("DR3_AT.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PacoteTuristicoId");

                    b.HasIndex("ClienteId", "PacoteTuristicoId")
                        .IsUnique();

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            DataReserva = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PacoteTuristicoId = 1
                        });
                });

            modelBuilder.Entity("DR3_AT.Models.DestinoPacote", b =>
                {
                    b.HasOne("DR3_AT.Models.Destino", "Destino")
                        .WithMany("PacotesDestinos")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DR3_AT.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("DestinosPacotes")
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("DR3_AT.Models.Reserva", b =>
                {
                    b.HasOne("DR3_AT.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DR3_AT.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("DR3_AT.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("DR3_AT.Models.Destino", b =>
                {
                    b.Navigation("PacotesDestinos");
                });

            modelBuilder.Entity("DR3_AT.Models.PacoteTuristico", b =>
                {
                    b.Navigation("DestinosPacotes");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
